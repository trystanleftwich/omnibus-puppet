#!/bin/bash
#
# Perform necessary puppet setup steps
# after package is installed.
#

PROGNAME=$(basename $0)
INSTALL_DIR="/tmp/"
PREFIX="/usr"

if [ -f /etc/redhat-release ]; then
  OS_FAMILY="RHEL"
else
  OS_FAMILY="Other"
fi

OS_MAJOR="$(perl -pe 's/.*release (\d+)\.\d+.*/$1/' /etc/redhat-release)"

function error_exit
{
  echo "${PROGNAME}: ${1:-"Unknown Error"}" 1>&2
  exit 1
}

function copy_if_absent
{
  if ! [[ -f $2 ]] ; then
    cp -rfp $1 $2
  fi
}

rm -f $PREFIX/bin/puppet
rm -f $PREFIX/bin/facter
rm -f $PREFIX/bin/hiera

ln -sf $INSTALL_DIR/bin/puppet $PREFIX/bin/puppet || error_exit "Cannot link puppet to $PREFIX/bin"
ln -sf $INSTALL_DIR/bin/facter $PREFIX/bin/facter || error_exit "Cannot link facter to $PREFIX/bin"
ln -sf $INSTALL_DIR/bin/hiera $PREFIX/bin/hiera || error_exit "Cannot link hiera to $PREFIX/bin"

mkdir -p /var/run/puppet

copy_if_absent $INSTALL_DIR/etc/logrotate.d/puppet /etc/logrotate.d/puppet
copy_if_absent $INSTALL_DIR/etc/sysconfig/puppet /etc/sysconfig/puppet

getent group puppet >/dev/null || groupadd -r puppet
getent passwd puppet >/dev/null || useradd -r -g puppet -s /sbin/nologin \
  -c "Puppet user" puppet

if [ "${OS_MAJOR}" == "7" -a "${OS_FAMILY}" == "RHEL" ]; then
  cp -f ${INSTALL_DIR}/ext/puppet.service /usr/lib/systemd/system/puppet.service
  systemctl daemon-reload
  systemctl enable puppet
else
  if [ ! -e /etc/init.d/puppet ] ; then
    cp -f ${INSTALL_DIR}/ext/puppet.init /etc/init.d/puppet
    chkconfig --add puppet
    chkconfig puppet off
    chmod 755 /etc/init.d/puppet
  fi
fi

echo "Thank you for installing Puppet!"

exit 0
